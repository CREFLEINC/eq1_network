name: Project Drafter

on:
  issues:
    types: [opened]

permissions:
  contents: read
  issues: write
  projects: write

jobs:
  add_to_project:
    runs-on: ubuntu-latest
    steps:
      - name: Add issue to org Project (Projects v2) and set Status=Todo
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const ORG_LOGIN = 'CREFLEINC';
            const PROJECT_NUMBER = 4;
            const DEFAULT_STATUS = 'Todo';

            const res = await github.graphql(
              `query($login: String!, $number: Int!) {
                 organization(login: $login) {
                   projectV2(number: $number) {
                     id
                     fields(first: 50) {
                       nodes {
                         id
                         name
                         dataType
                         ... on ProjectV2SingleSelectField {
                           options { id name }
                         }
                       }
                     }
                   }
                 }
               }`,
              { login: ORG_LOGIN, number: PROJECT_NUMBER }
            );

            const project = res.organization?.projectV2;
            if (!project) {
              core.setFailed('Project not found. ORG_LOGIN/PROJECT_NUMBER 확인 필요');
              return;
            }

            const issueId = context.payload.issue.node_id;

            const addItemRes = await github.graphql(
              `mutation($projectId: ID!, $contentId: ID!) {
                 addProjectV2ItemById(input: {projectId: $projectId, contentId: $contentId}) {
                   item { id }
                 }
               }`,
              { projectId: project.id, contentId: issueId }
            );

            const itemId = addItemRes.addProjectV2ItemById.item.id;

            const statusField = project.fields.nodes.find(
              f => f.name === 'Status' && f.dataType === 'SINGLE_SELECT'
            );

            if (statusField && statusField.options?.length) {
              const target = statusField.options.find(o => o.name === DEFAULT_STATUS) || statusField.options[0];

              await github.graphql(
                `mutation($projectId: ID!, $itemId: ID!, $fieldId: ID!, $optionId: String!) {
                   updateProjectV2ItemFieldValue(input: {
                     projectId: $projectId,
                     itemId: $itemId,
                     fieldId: $fieldId,
                     value: { singleSelectOptionId: $optionId }
                   }) {
                     projectV2Item { id }
                   }
                 }`,
                { projectId: project.id, itemId, fieldId: statusField.id, optionId: target.id }
              );
            }
